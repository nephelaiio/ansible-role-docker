---
- name: include variable overrides
  include_vars: "{{ item }}"
  with_first_found:
    - "vars/{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
    - "vars/{{ ansible_distribution }}.yml"
    - "vars/{{ ansible_os_family }}.yml"

- name: remove incompatible packages
  package:
    name: "{{ docker_remove_packages }}"
    state: absent
  when:
    - docker_remove_packages is defined

- name: install helper packages
  package:
    name: "{{ docker_packages_helpers | default(docker_packages_helpers_default) }}"
    state: "{{ docker_packages_state }}"

- name: install pip helpers
  pip:
    name: "{{ docker_pip_helpers | default(docker_pip_helpers_default) }}"
    state: "{{ docker_packages_state }}"

- name: install apt key
  apt_key:
    keyserver: "{{ docker_repo_keyserver | default(docker_repo_keyserver_default) }}"
    state: present
    id: "{{ docker_repo_key_id | default(docker_repo_key_id_default) }}"
  when: ansible_os_family == "Debian"
  ignore_errors: yes
  register: apt_key_module

- name: force install apt key
  shell: |
    curl -fsSL {{ docker_repo_keyserver | default(docker_repo_keyserver_default) }} | sudo apt-key add -
  args:
    warn: false
  when:
    - ansible_os_family == "Debian"
    - apt_key_module.failed
  tags:
    - skip_ansible_lint

- name: install apt repository
  apt_repository:
    repo: "{{ docker_repo_url | default(docker_repo_url_default) }}"
    state: present
    filename: docker
    validate_certs: no
  when: ansible_os_family == "Debian"

- name: install yum repository
  get_url:
    url: "{{ docker_repo_url | default(docker_repo_url_default) }}"
    dest: /etc/yum.repos.d/docker.repo
    mode: 0644
  when: ansible_os_family == "RedHat"

- meta: flush_handlers

- name: install packages
  package:
    name: "{{ docker_packages | default(docker_packages_default) }}"
    state: "{{ docker_packages_state }}"
  when: ansible_os_family != "Debian"

- name: install apt packages
  apt:
    name: "{{ docker_packages | default(docker_packages_default) }}"
    state: "{{ docker_packages_state }}"
    allow_unauthenticated: yes
  when: ansible_os_family == "Debian"

- name: configure service path
  file:
    path: "{{ docker_configuration_path }}"
    state: directory

- block:

    - name: configure service
      template:
        src: "{{ docker_configuration_template }}"
        dest: "{{ docker_configuration_file }}"

    - name: manage service
      systemd:
        name: "{{ docker_service_name }}"
        state: "{{ docker_service_state }}"
        enabled: "{{ docker_service_enabled }}"
        daemon_reload: yes

  when: docker_service_manage | bool

- name: configure logging
  copy:
    dest: "{{ docker_log_conf_file }}"
    content: "{{ docker_log_conf | to_nice_json(indent=2) }}"
  notify: restart docker service
  when: docker_log_conf_manage | bool

- name: manage docker groups
  group:
    name: "{{ docker_group }}"
  when: docker_group_manage | bool

- name: manage docker users
  user:
    append: yes
    groups: "{{ docker_group }}"
    name: "{{ lookup('env', 'USER') }}"
  when: docker_user_manage | bool
